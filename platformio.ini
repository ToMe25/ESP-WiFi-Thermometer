; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env]
framework = arduino
monitor_speed = 115200
upload_speed = 921600
extra_scripts = post:shared/compress_web.py
lib_deps = 
	ESP Async WebServer = https://github.com/me-no-dev/ESPAsyncWebServer.git
	marvinroger/AsyncMqttClient@^0.9.0
	adafruit/DHT sensor library@^1.4.4
	milesburton/DallasTemperature@^3.11.0
board_build.embed_txtfiles = 
	wifissid.txt
	wifipass.txt
	otapass.txt
	mqttuser.txt
	mqttpass.txt
	src/html/index.html
	src/html/not_found.html
board_build.embed_files = 
	data/gzip/main.css.gz
	data/gzip/index.js.gz
	data/gzip/favicon.ico.gz
	data/gzip/favicon.png.gz
	data/gzip/favicon.svg.gz

[env:esp32dev]
platform = https://github.com/platformio/platform-espressif32.git#v3.5.0
platform_packages = framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#1.0.6
board = esp32dev

[env:esp32dev_debug]
extends = env:esp32dev
build_type = debug
build_flags = -D CORE_DEBUG_LEVEL=5

[env:esp32dev_ota]
extends = env:esp32dev
upload_protocol = espota
upload_port = esp-wifi-thermometer.local
extra_scripts =
    ${env.extra_scripts}
    post:shared/read_ota_pass.py

[env:esp32dev_ota_debug]
extends = env:esp32dev_ota
build_type = debug
build_flags = -D CORE_DEBUG_LEVEL=5

[env:esp32dev_dsm]
extends = env:esp32dev
build_flags = -D ENABLE_DEEP_SLEEP_MODE=1

[env:esp32dev_dsm_debug]
extends = env:esp32dev_dsm
build_type = debug
build_flags = -D ENABLE_DEEP_SLEEP_MODE=1 -D CORE_DEBUG_LEVEL=5

[env:esp_wroom_02]
platform = https://github.com/ToMe25/platform-espressif8266.git#embed_files
board = esp_wroom_02

[env:esp_wroom_02_debug]
extends = env:esp_wroom_02
build_type = debug
build_flags = -D CORE_DEBUG_LEVEL=5

[env:esp_wroom_02_ota]
extends = env:esp_wroom_02
upload_protocol = espota
upload_port = esp-wifi-thermometer.local
extra_scripts =
    ${env.extra_scripts}
    post:shared/read_ota_pass.py

[env:esp_wroom_02_ota_debug]
extends = env:esp_wroom_02_ota
build_type = debug
build_flags = -D CORE_DEBUG_LEVEL=5

[env:esp_wroom_02_dsm]
extends = env:esp_wroom_02
build_flags = -D ENABLE_DEEP_SLEEP_MODE=1

[env:esp_wroom_02_dsm_debug]
extends = env:esp_wroom_02_dsm
build_type = debug
build_flags = -D ENABLE_DEEP_SLEEP_MODE=1 -D CORE_DEBUG_LEVEL=5
